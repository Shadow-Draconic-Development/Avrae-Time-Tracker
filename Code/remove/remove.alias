embed
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International 
# * License available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def delete_from_dict(key_result: str, all_server_dict: dict, server_id: str) -> None:
    """
    Deletes entry from dict

    Args:
        key_result (str): Tracker name
        all_server_dict (dict): Dictionary containing all trackers
        server_id (str): Server ID    
    """

    # Turns off tracker and sets time to when it got turned off
    all_server_dict[server_id][key_result][0] = False
    all_server_dict[server_id][key_result][1] = int(time())

    # Setup backup_dict
    set_uvar('clock_dict_backup', dump_json(all_server_dict))

    # Pop tracker
    all_server_dict[server_id].pop(key_result)

    # Setup main dict
    set_uvar('clock_dict', dump_json(all_server_dict))


def main(input_list: list[str]) -> tuple(str, str, str):
    """
    Main program function
    
    Args:
        input_list (list[str]): List of user inputs
    
    Return:
        str: Title
        str: Body content
        str: Color hex code
    """

    # If there is at least one input
    if len(input_list) > 0:
        server_id = str(ctx.guild.id)

    # If there was no input
    else:
        return "You Have Been Sneak Attacked by an Error", 'No tracker name given', "#CF142B"

    # If the UVAR exists
    if (all_server_test := get_uvar('clock_dict')):

        # Tries to convert the uvar to a dictionary
        try:
            all_server_dict = load_json(all_server_test)

        except:
            return "You Have Been Sneak Attacked by an Error", 'Problems loading dictionary', "#CF142B"

    # If the UVAR does not exist
    else:
        return "You Have Been Sneak Attacked by an Error", f"UVAR not found\nPlease run `{ctx.prefix}clock create [tracker name]` or `{ctx.prefix}clock in`", "#CF142B"
    
    # If the server id exists in the uvar, pulls dictionary of all trackers made within the server.
    if (key_result := search_list(server_id, all_server_dict.keys())):
        pass

    # If the server id does not exist, throws an error
    else:
        return "You Have Been Sneak Attacked by an Error", "You need to create a tracker on this server before you can remove one", "#CF142B"

    # If it finds a tracker
    if (key_result := search_list(input_list[0].lower(), all_server_dict[server_id].keys())):

        # If it only has exactly 1 match, delete tracker
        if len(key_result) == 1:
            delete_from_dict(key_result[0], all_server_dict, server_id)
            return f"`{key_result[0]}` Tracker Successfully Removed", "", ""

        # If multiple matches
        else:

            # For each match, if it is not an exact match
            for key in key_result:
                if input_list[0].lower() != key.lower():
                    pass

                # If it finds an exact match, delete tracker
                else:
                    delete_from_dict(key, all_server_dict, server_id)
                    return f"`{key}` Tracker Successfully Removed", "", ""

            # If no exact match was made
            key_result.insert(0, "**Multiple trackers found:**")
            
            return "You Have Been Sneak Attacked by an Error", "\n".join(key_result), "#CF142B"

    # No matches
    else:
        return "You Have Been Sneak Attacked by an Error", f"Tracker not found (`{input_list[0]}`)", "#CF142B"
   

# Runs main program
title, f, color = main(&ARGS&)


</drac2>
-title "{{title}}"
-f "{{f}}"
-color "{{color}}"
-thumb "https://raw.githubusercontent.com/ShadowStride-Draconic-Development/Avrae-Time-Tracker/main/Data/main.png"
-footer "{{ctx.prefix}}clock remove [tracker name] | 12/16/23 | ShadowsStride"